// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherBroadcast.Infrastructure;

#nullable disable

namespace WeatherBroadcast.Infrastructure.Migrations
{
    [DbContext(typeof(WeatherBroadcastDbContext))]
    partial class WeatherBroadcastDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WeatherBroadcast.Domain.Entities.WeatherData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Elevation")
                        .HasColumnType("float");

                    b.Property<double>("GenerationtimeMs")
                        .HasColumnType("float");

                    b.Property<string>("Hourly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HourlyUnits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimezoneAbbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtcOffsetSeconds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WeatherData");
                });
#pragma warning restore 612, 618
        }
    }
}
